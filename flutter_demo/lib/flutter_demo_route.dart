// GENERATED CODE - DO NOT MODIFY BY HAND
// **************************************************************************
// auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';
import 'demos/demo3_BloC/modules/module1/ui/pages/home/home_page.dart';
import 'demos/demo3_BloC/modules/module2/ui/pages/counter_page.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:user_repository/user_repository.dart';
import 'demos/demo3_BloC/modules/module1/home.dart';
import 'demos/demo3_BloC/modules/module1/authentication.dart';
import 'demos/demo3_BloC/index.dart';

RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case "demo3://index":
      final userRepository = UserRepository();
      return RouteResult(
        widget: BlocProvider<AuthenticationBloc>(
          builder: (context) {
            return AuthenticationBloc(userRepository: userRepository)
              ..dispatch(AppStarted());
          },
          child: BlocProvider<HomeBloc>(
            builder: (context) {
              return HomeBloc();
            },
            child: MyAppDemo3Home(userRepository: userRepository),
          ),
        ),
        routeName: "MyAppDemo3Home",
      );
    case "module1://home_page":
      return RouteResult(
        widget: HomePage(),
        routeName: "HomePage",
      );
    case "module2://count_page":
      return RouteResult(
        widget: CounterPage(),
        routeName: "CounterPage",
      );
    default:
      return RouteResult();
  }
}

class RouteResult {
  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;

  const RouteResult(
      {this.widget,
      this.showStatusBar = true,
      this.routeName = '',
      this.pageRouteType,
      this.description = ''});
}

enum PageRouteType { material, cupertino, transparent }

List<String> routeNames = ["demo3://index", "module1://home_page", "module2://count_page"];
